workflows:
  ios-no-signing-build:
    name: Envanto Barkod iOS Build (No Signing)
    max_build_duration: 45
    instance_type: mac_mini_m1
    environment:
      vars:
        XCODE_WORKSPACE: "EnvantoBarkod.xcodeproj"
        XCODE_SCHEME: "EnvantoBarkod"
        BUNDLE_ID: "com.envanto.barcode.ios"
      xcode: latest
      cocoapods: default
    scripts:
      - name: Get CocoaPods dependencies
        script: |
          if [ -f "Podfile" ]; then
            pod install
          else
            echo "Podfile bulunamadƒ±, CocoaPods adƒ±mƒ± atlanƒ±yor"
          fi
      - name: Build without code signing
        script: |
          # Code signing olmadan build
          xcodebuild \
            -project "$XCODE_WORKSPACE" \
            -scheme "$XCODE_SCHEME" \
            -sdk iphoneos \
            -configuration Debug \
            build \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO \
            PROVISIONING_PROFILE_SPECIFIER=""
      - name: Create unsigned IPA
        script: |
          # Unsigned IPA olu≈ütur (test ama√ßlƒ±)
          echo "üì¶ Creating unsigned IPA for testing..."
          
          # Build klas√∂r√ºn√º bul
          BUILD_DIR=$(find ~/Library/Developer/Xcode/DerivedData -name "*.app" -path "*/Build/Products/Debug-iphoneos/*" | head -1)
          
          if [ -n "$BUILD_DIR" ]; then
            echo "‚úÖ App found: $BUILD_DIR"
            
            # IPA klas√∂r yapƒ±sƒ± olu≈ütur
            mkdir -p build/Payload
            cp -r "$BUILD_DIR" build/Payload/
            
            # ZIP olarak paketleyip IPA yap
            cd build
            zip -r EnvantoBarkod-unsigned.ipa Payload/
            cd ..
            
            echo "‚úÖ Unsigned IPA created: build/EnvantoBarkod-unsigned.ipa"
          else
            echo "‚ùå App build not found"
          fi
    artifacts:
      - build/*.ipa
      - /tmp/xcodebuild_logs/*.log
    publishing:
      email:
        recipients:
          - samet.bicen@icloud.com
        notify:
          success: true
          failure: true

  ios-simulator-workflow:
    name: Envanto Barkod iOS Simulator Test
    max_build_duration: 30
    instance_type: mac_mini_m1
    environment:
      vars:
        XCODE_WORKSPACE: "EnvantoBarkod.xcodeproj"
        XCODE_SCHEME: "EnvantoBarkod"
      xcode: latest
      cocoapods: default
    scripts:
      - name: Get CocoaPods dependencies
        script: |
          if [ -f "Podfile" ]; then
            pod install
          else
            echo "Podfile bulunamadƒ±, CocoaPods adƒ±mƒ± atlanƒ±yor"
          fi
      - name: Build for simulator
        script: |
          xcodebuild \
            -project "$XCODE_WORKSPACE" \
            -scheme "$XCODE_SCHEME" \
            -sdk iphonesimulator \
            -destination 'platform=iOS Simulator,name=iPhone 15,OS=latest' \
            build
    artifacts:
      - /tmp/xcodebuild_logs/*.log
    publishing:
      email:
        recipients:
          - samet.bicen@icloud.com
        notify:
          success: true
          failure: true

  ios-manual-signing:
    name: Envanto Barkod iOS Manual Signing
    max_build_duration: 60
    instance_type: mac_mini_m1
    environment:
      vars:
        XCODE_WORKSPACE: "EnvantoBarkod.xcodeproj"
        XCODE_SCHEME: "EnvantoBarkod"
        BUNDLE_ID: "com.envanto.barcode.ios"
        DEVELOPMENT_TEAM: "6F974S63AX"
        TARGET_DEVICE_UDID: "00008140-001469903469801C"
      xcode: latest
      cocoapods: default
    scripts:
      - name: Setup Apple Developer credentials
        script: |
          # Apple Developer hesabƒ± ile giri≈ü yap
          echo "üîê Setting up Apple Developer credentials..."
          
          # Keychain'e certificate ekle (eƒüer varsa)
          security list-keychains
          
          # Provisioning profile'larƒ± listele
          ls -la ~/Library/MobileDevice/Provisioning\ Profiles/ || echo "No provisioning profiles found"
      - name: Register device if needed
        script: |
          echo "üì± Checking device registration..."
          echo "Device UDID: $TARGET_DEVICE_UDID"
          
          # Cihaz kayƒ±tlƒ± mƒ± kontrol et (bu adƒ±m manuel yapƒ±lmalƒ±)
          echo "‚ö†Ô∏è  Device must be registered in Apple Developer Portal manually"
          echo "   1. Go to developer.apple.com"
          echo "   2. Add device with UDID: $TARGET_DEVICE_UDID"
      - name: Get CocoaPods dependencies
        script: |
          if [ -f "Podfile" ]; then
            pod install
          else
            echo "Podfile bulunamadƒ±, CocoaPods adƒ±mƒ± atlanƒ±yor"
          fi
      - name: Try automatic provisioning
        script: |
          echo "üîß Attempting automatic provisioning..."
          
          # Automatic signing ile deneme
          xcodebuild \
            -project "$XCODE_WORKSPACE" \
            -scheme "$XCODE_SCHEME" \
            -configuration Debug \
            -destination 'generic/platform=iOS' \
            -allowProvisioningUpdates \
            DEVELOPMENT_TEAM="$DEVELOPMENT_TEAM" \
            CODE_SIGN_STYLE=Automatic \
            PRODUCT_BUNDLE_IDENTIFIER="$BUNDLE_ID" \
            build \
            || echo "‚ùå Automatic provisioning failed - device may not be registered"
      - name: Create development archive
        script: |
          echo "üì¶ Creating development archive..."
          
          xcodebuild \
            -project "$XCODE_WORKSPACE" \
            -scheme "$XCODE_SCHEME" \
            -configuration Debug \
            -destination 'generic/platform=iOS' \
            -allowProvisioningUpdates \
            DEVELOPMENT_TEAM="$DEVELOPMENT_TEAM" \
            CODE_SIGN_STYLE=Automatic \
            PRODUCT_BUNDLE_IDENTIFIER="$BUNDLE_ID" \
            archive \
            -archivePath build/EnvantoBarkod.xcarchive \
            || echo "‚ùå Archive creation failed"
      - name: Export IPA
        script: |
          if [ -d "build/EnvantoBarkod.xcarchive" ]; then
            echo "üì± Exporting IPA..."
            
            # Export options olu≈ütur
            cat > export_options.plist << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>method</key>
              <string>development</string>
              <key>teamID</key>
              <string>$DEVELOPMENT_TEAM</string>
              <key>uploadBitcode</key>
              <false/>
              <key>compileBitcode</key>
              <false/>
              <key>signingStyle</key>
              <string>automatic</string>
          </dict>
          </plist>
          EOF
            
            xcodebuild \
              -exportArchive \
              -archivePath build/EnvantoBarkod.xcarchive \
              -exportPath build \
              -exportOptionsPlist export_options.plist \
              || echo "‚ùå IPA export failed"
          else
            echo "‚ùå Archive not found, skipping IPA export"
          fi
    artifacts:
      - build/*.ipa
      - build/EnvantoBarkod.xcarchive
      - /tmp/xcodebuild_logs/*.log
    publishing:
      email:
        recipients:
          - samet.bicen@icloud.com
        notify:
          success: true
          failure: true